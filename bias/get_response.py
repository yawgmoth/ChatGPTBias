import csv
import pandas as pd
from openai import OpenAI
import apikey
import random
import os
import sys


def get_response(prompts, model):
    # Add your API key
    client = OpenAI(api_key=apikey.API_KEY)
    responses = []

    # Ask ChatGPT our generated prompts
    for prompt in prompts:
        response = client.chat.completions.create(
            model=model,
            messages=[{"role": "user", 
                       "content": prompt["prompt"]}],
            temperature=0.2,
            max_tokens=120,
            top_p=1,
            frequency_penalty=0,
            presence_penalty=0
        )
        prompt_response = response.choices[0].message.content
        
        print(prompt_response) # Print response to view progress
        responses.append(prompt_response)
    return responses


def main(directory=".", force=False, model="gpt-3.5-turbo-0125"):
    for fname in os.listdir(directory):
        if fname.startswith("prompt_") and fname.endswith(".csv"):
            fname = os.path.join(directory, fname)
            outf = fname.replace("prompt_", "response_")
            if os.path.exists(outf) and not force:
                print(outf, "already exists. Skipping. Use -f to force overwrite")
                continue
            prompts = []
            with open(fname, 'r') as data:
                csv_reader = csv.DictReader(data)

                # reads prompts generated by previous step
                for row in csv_reader:
                    prompts.append(row)
            
            
            # Responses collected from ChatGPT
            responses = get_response(prompts, model)
            with open(outf, "w", newline="") as f:
                wr = csv.writer(f)
                wr.writerow(["pair","A","B","pronoun","prompt","expected","response"])
                for p,r in zip(prompts,responses):
                    row = []
                    for k in ["pair","A","B","pronoun","prompt","expected"]:
                        row.append(p[k])
                    row.append(r)
                    wr.writerow(row)
            

if __name__ == "__main__":
    main(force="-f" in sys.argv)